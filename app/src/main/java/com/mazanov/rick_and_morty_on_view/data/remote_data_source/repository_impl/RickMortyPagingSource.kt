package com.mazanov.rick_and_morty_on_view.data.remote_data_source.repository_implimport androidx.paging.PagingSourceimport androidx.paging.PagingStateimport com.mazanov.rick_and_morty_on_view.data.remote_data_source.mapper.PersonMapperimport com.mazanov.rick_and_morty_on_view.data.remote_data_source.retrofit.ApiModuleimport com.mazanov.rick_and_morty_on_view.domain.models.PersonModelclass RickMortyPagingSource() : PagingSource<Int, PersonModel>() {    private val apiService = ApiModule.retrofit()    private val mapper = PersonMapper()    override fun getRefreshKey(state: PagingState<Int, PersonModel>): Int? {        return null    }    override suspend fun load(params: LoadParams<Int>): LoadResult<Int, PersonModel> {        return try {            val currentPage = params.key ?: 1            val response = apiService.getAllCharactersFromApi(currentPage)            val responseData = mutableListOf<PersonModel>()            val data = mapper.mapResultDtoToResultFromApi(response).personList            responseData.addAll(data)            LoadResult.Page(                data = responseData,                prevKey = if (currentPage == 1) null else -1,                nextKey = currentPage.plus(1)            )        } catch (e: Exception) {            LoadResult.Error(e)        }    }}