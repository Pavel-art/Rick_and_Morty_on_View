package com.mazanov.rick_and_morty_on_view.presentation.main_screenimport android.annotation.SuppressLintimport android.content.Contextimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.ImageViewimport androidx.core.content.ContextCompatimport androidx.paging.PagingDataAdapterimport androidx.recyclerview.widget.RecyclerViewimport androidx.swiperefreshlayout.widget.CircularProgressDrawableimport com.bumptech.glide.Glideimport com.mazanov.rick_and_morty_on_view.Rimport com.mazanov.rick_and_morty_on_view.databinding.CardItemMainBindingimport com.mazanov.rick_and_morty_on_view.domain.models.PersonModelclass MainScreenAdapter :    PagingDataAdapter<PersonModel, MainScreenAdapter.Holder>(DiffCallback.comparator) {    var onItemClickListener: ((PersonModel) -> Unit)? = null    class Holder(private val view: View) : RecyclerView.ViewHolder(view) {        val binding: CardItemMainBinding = CardItemMainBinding.bind(view)    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): Holder {        val view =            LayoutInflater.from(parent.context).inflate(R.layout.card_item_main, parent, false)        return Holder(view)    }    override fun onBindViewHolder(holder: Holder, position: Int) {        val personItem = getItem(position)        holder.itemView.setOnClickListener {            personItem?.let { person -> onItemClickListener?.invoke(person) }            true        }        with(holder.binding) {            personItem?.let {                addAvatarImageFromGlide(                    url = it.image,                    context = holder.itemView.context,                    imageSrc = mainAvatar                )            }            tvName.text = personItem?.name ?: ""            tvLocationName.text = personItem?.location?.name ?: ""            tvOriginName.text = personItem?.origin?.name ?: ""            tvStatus.text = personItem?.status ?: ""            when (personItem?.status) {                "Alive" -> {                    ivStatus.background.setTint(ContextCompat.getColor(holder.itemView.context, R.color.status_alive))                }                "Dead" -> {                    ivStatus.background.setTint(ContextCompat.getColor(holder.itemView.context, R.color.status_dead))                }                else -> {                    ivStatus.background.setTint(ContextCompat.getColor(holder.itemView.context, R.color.white))                }            }        }    }    @SuppressLint("ResourceAsColor")    private fun addAvatarImageFromGlide(        url: String,        context: Context,        imageSrc: ImageView    ) {        Glide            .with(context)            .load(url)            .placeholder(R.drawable.loading)            .into(imageSrc);    }}